version: '3'

services:
  postgres-nussknacker:
    container_name: postgres-nussknacker
    image: postgres:16.0
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
      - postgres-nussknacker:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  influxdb:
    container_name: nussknacker_influxdb
    hostname: influxdb
    image: influxdb:1.8.10
    ports:
      - "8086:8086"
    environment:
      INFLUXDB_DB: esp
      INFLUXDB_DATA_QUERY_LOG_ENABLED: "false"
      INFLUXDB_HTTP_LOG_ENABLED: "false"
    volumes:
      - infludb-nussknacker:/var/lib/influxdb

  chronograf:
    image: chronograf:latest
    ports:
      - '8888:8888'
    volumes:
      - chronograf-nussknacker:/var/lib/chronograf
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=root
      - INFLUXDB_PASSWORD=root

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    # tmpfs is enabled to avoid 'node already exists' kafka problem - https://github.com/wurstmeister/kafka-docker/issues/389
    tmpfs: "/datalog"
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:3032,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:3032,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.3.2
    hostname: kafka-schema-registry
    container_name: kafka-schema-registry
    ports:
      - "8085:8085"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:3032
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8085
    depends_on:
      - kafka

  akhq:
    image: tchiotludo/akhq:0.24.0
    ports:
      - "8081:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:3032"
              schema-registry:
                url: "http://kafka-schema-registry:8085"
    depends_on:
      - kafka
      - kafka-schema-registry

volumes:
  postgres-nussknacker:
  infludb-nussknacker:
  chronograf-nussknacker: